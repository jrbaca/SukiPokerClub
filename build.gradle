plugins {
    id "org.jetbrains.kotlin.jvm" version "1.3.61" apply false
    id("org.openjfx.javafxplugin") version "0.0.8" apply false
}

subprojects {
    apply plugin: "org.jetbrains.kotlin.jvm"

    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

        // JUnit5 support
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.2.0'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.2.0'

        // Mocking
        testCompile group: 'org.mockito', name: 'mockito-inline', version: '3.3.0'

    }

    sourceSets {
        testInteg {
            compileClasspath += sourceSets.main.output
            runtimeClasspath += sourceSets.main.output
        }
    }

    configurations {
        testIntegImplementation.extendsFrom testImplementation
        testIntegRuntimeOnly.extendsFrom testRuntimeOnly
    }

    task integrationTest(type: Test) {
        description = 'Runs integration tests.'
        group = 'verification'

        testClassesDirs = sourceSets.testInteg.output.classesDirs
        classpath = sourceSets.testInteg.runtimeClasspath
        shouldRunAfter test
    }
    check.dependsOn integrationTest

    // Enable JUnit 5
    test {
        useJUnitPlatform()
    }
    integrationTest {
        useJUnitPlatform()
    }

    repositories {
        jcenter()
    }

    sourceCompatibility = 11
    targetCompatibility = 11

    compileKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }
    compileTestKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }
}

project(":eventdrivengame") {
    dependencies {
        implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.3' // Multithreading
        implementation "org.jetbrains.kotlin:kotlin-reflect" // Reflection

        // Dependency injection
        implementation group: 'com.google.inject', name: 'guice', version: '4.2.2'
        implementation group: 'com.google.inject.extensions', name: 'guice-assistedinject', version: '4.2.2'

        // Logging
        implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
        implementation 'io.github.microutils:kotlin-logging:1.7.8'
    }
}

project(":core") {
//    def arrow_version = "0.10.4"

    dependencies {
        implementation project(":eventdrivengame")

        // Ktor for websockets
        compile "io.ktor:ktor-websockets:1.3.1"

        // Logging
        compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
        compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.13.0'
        compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.13.0'
        compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.13.0' // slf4j bridge
        compile 'io.github.microutils:kotlin-logging:1.7.8'

        // Guice for dependency injection
        implementation group: 'com.google.inject', name: 'guice', version: '4.2.2'

        // Functional programming
//        implementation "io.arrow-kt:arrow-fx:$arrow_version"
//        implementation "io.arrow-kt:arrow-syntax:$arrow_version"
    }
}

project(":server") {
    apply plugin: "application"

    mainClassName = 'app.SukiPokerClubServerKt'

    dependencies {
        implementation project(":core")
        implementation "io.ktor:ktor-server-netty:1.3.1"
    }
}

project(":client") {
    apply plugin: "application"
    apply plugin: "org.openjfx.javafxplugin"

    mainClassName = 'app.SukiPokerClubClientKt'

    javafx {
        version = "13"
        modules = ['javafx.controls', 'javafx.fxml']
    }

    dependencies {
        implementation project(":core")
        implementation "io.ktor:ktor-client-cio:1.3.1"
    }
}

project(":launcher") {
    task packageReleaseJar(type: Jar) {
        manifest {
            attributes 'Main-Class': 'MainKt'
        }
        archiveName("Suki's Poker Club.jar")
        from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
        with jar
    }
    packageReleaseJar.dependsOn(build)
}